<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangxb.wxbhome.dao.UserDao">
    <!-- model.User的resultMapper,其中column是给数据库列名,它对应model.User的property的属性-->
    <resultMap id="userInfo" type="com.wangxb.wxbhome.model.User">
        <id column="id" jdbcType="BIGINT" property="userId"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="college_id" jdbcType="BIGINT" property="collegeId"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
    </resultMap>
    <insert id="addUser">
        insert into user(nickname, password, email)
        values (#{user.nickname},#{user.password},#{user.email})
    </insert>


    <select id="getUserById" resultMap="userInfo">
        SELECT
            ID,
            nickname,
            real_name,
            student_id,
            password,
            email,
            college_id,
            sex
        FROM
            user
        WHERE
            user_id = #{id}

    </select>


    <select id="getUserByStudentId" resultMap="userInfo">
        SELECT
            ID,
            nickname,
            real_name,
            student_id,
            password,
            email,
            college_id,
            sex
        FROM
            user
        WHERE
            user_id = #{studentId}
    </select>

    <select id="getUserByNickName" resultMap="userInfo">
        SELECT *
        FROM
            user
        WHERE
            NICKNAME = #{nickname}
    </select>

    <select id="getPasswordByNickName" resultType="string">
        SELECT password
        FROM
            user
        WHERE
            nickname = #{nickname}
    </select>
    <select id="nicknameCounts" resultType="java.lang.Integer">
        select count(1)
        from user
        where nickname=#{nickname}
    </select>
    <select id="emailCounts" resultType="java.lang.Integer">
        select count(1)
        from user
        where email=#{email}
    </select>
    <select id="getAllUsers" resultMap="userInfo">
        select nickname,password,email
        from user
    </select>
    <select id="getCountAllUsers" resultType="java.lang.Long">
        select count(1)
        from user
    </select>
    <select id="getUsers" resultMap="userInfo">
        select nickname,password,email
        from user
        limit #{startId},#{limit}
    </select>

    <select id="getIdByNickname" resultType="java.lang.Long">
        select ID
        from user
        where NICKNAME=#{nickname}
    </select>


</mapper>